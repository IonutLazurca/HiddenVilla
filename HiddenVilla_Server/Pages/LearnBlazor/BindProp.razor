@page "/bindprop"
@using Model
@*<h1>Hello, world!</h1>

    Welcome to your new app.

    <SurveyPrompt Title="How is Blazor working for you?" />*@

<div class="bg-light border p-2">

    <h2 class="bg-light border-2">
        First Room
    </h2>
    Room: @Room.RoomName
    <br />
    Price: @Room.Price
    <br />

    <input type="checkbox" @bind-value="@Room.IsActive" checked="@(Room.IsActive? "checked":null)" />
    Is Active
    <br />
    <span>This room is: @(Room.IsActive? "Active" : "Inactive")</span>
    <br />

    <select @bind="SelectedRoomProp">
        @foreach (var prop in Room.RoomProps)
        {
            <option value="@prop.Name">@prop.Name</option>
        }
    </select>
    <br />
    <span>The Room Prop selected is @SelectedRoomProp</span>
</div>

<div class="bg-blue border p-2">

    <div class="row">
        <div class="col-12">
            <table class="table table-dark table-sm table-striped table-hover border-bottom">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Price</th>
                        <th>IsActive</th>
                        <th>Square Feet</th>
                        <th>Allowed guests</th>
                        <th>Checked</th>
                        <th>Edit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var room in RoomList)
                    {
                        <tr>
                            <td>@room.Id</td>
                            <td><input type="text" @bind-value="@room.RoomName" @bind-value:event="oninput" /></td>
                            <td><input type="text" @bind-value="@room.Price" @bind-value:event="oninput" /></td>
                            <td>@(room.IsActive?"Active" : "Not Active")</td>
                            @foreach (var prop in room.RoomProps)
                            {
                                <td>@prop.Value</td>
                            }

                            <td><input type="checkbox" @bind-value="room.IsActive" checked="@(room.IsActive? "checked":null)" /></td>
                            <td><button class="btn btn-success" @onclick="@(() => DeleteRoom(room.Id))"><i class="oi oi-trash"></i></button></td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>

    </div>
    <div class="row">
        <div class="col-4">
            <table class="table table-dark  table-sm table-striped table-hover border-bottom">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var room in RoomList)
                    {
                        <tr>
                            <td>@room.RoomName </td>
                            <td>@room.Price$</td>
                        </tr>

                    }
                </tbody>
            </table>

        </div>
    </div>
</div>



@code{
    List<BlazorRoom> RoomList = new List<BlazorRoom>();

    public string SelectedRoomProp = "";
    BlazorRoom Room = new BlazorRoom()
    {
        Id = 1,
        RoomName = "Villa Suite",
        IsActive = true,
        Price = 499,
        RoomProps = new List<BlazorRoomProp>
{
            new BlazorRoomProp{Id=1,Name="Sq Ft", Value="100"},
            new BlazorRoomProp{Id=2, Name="Occupancy", Value="3"}
        }
    };

    protected override void OnInitialized()
    {
        base.OnInitialized();

        RoomList.Add(new BlazorRoom()
        {
            Id = 201,
            RoomName = "Villa Suite One Bed Room",
            IsActive = true,
            Price = 399,
            RoomProps = new List<BlazorRoomProp>
{
               new BlazorRoomProp{Id=1,Name="Sq Ft", Value="100"},
               new BlazorRoomProp{Id=2, Name="Occupancy", Value="2"}
            }

        });

        RoomList.Add(new BlazorRoom()
        {
            Id = 301,
            RoomName = "Villa Suite Two Bed Room",
            IsActive = true,
            Price = 599,
            RoomProps = new List<BlazorRoomProp>
{
               new BlazorRoomProp{Id=1,Name="Sq Ft", Value="150"},
               new BlazorRoomProp{Id=2, Name="Occupancy", Value="3"}
            }

        });
    }
    private void DeleteRoom(int id)
    {
        RoomList.Remove(RoomList.First(x => x.Id == id));
    }



}