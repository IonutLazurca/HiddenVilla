@page "/hotel-room"
@using Models
@using Business.Repository.IRepository
@inject IHotelRoomRepository HotelRoomRepository
@inject NavigationManager NavigationManager

<div class="row mt-4">
    <div class="col-8">
        <h4 class="card-title text-info">Hotel Room's</h4>
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Rate</th>
                    <th>Sq. Ft</th>
                    <th>Description</th>
                    <th>Delete</th>
                    <th>Edit</th>
                </tr>
            </thead>
            <tbody>
                @if (HotelRooms.Any())
                {
                    @foreach (var room in HotelRooms)
                    {
                <tr>
                    <td>@room.Id</td>
                    <td>@room.Name</td>
                    <td>@room.RegularRate.ToString("c")</td>
                    <td>@room.SqFt</td>
                    <td>@room.Details</td>
                    <td><button class="btn btn-danger" @onclick="(args)=>DeleteHotelRoom(args, room.Id)">Delete</button></td>
                    @*<td><button class="btn btn-secondary" @onclick="(args)=>GoToEditPage(args, room.Id)">Edit</button></td>*@
                    <td><NavLink href="@($"hotel-room/edit/{room.Id}")" class="btn btn-primary">Edit</NavLink></td>
                </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7">No records found</td>
                    </tr>

                }
            </tbody>
        </table>

    </div>
    <div class="col-3 offset-1">
        <NavLink href="hotel-room/create" class="btn btn-info form-control">Add New Room</NavLink>
    </div>
</div>

@code {

    //public IEnumerable<HotelRoomDto> HotelRooms { get; set; } = new List<HotelRoomDto>();
    IEnumerable<HotelRoomDto> HotelRooms = Enumerable.Empty<HotelRoomDto>();

    protected override async Task OnInitializedAsync()
    {
        HotelRooms = await HotelRoomRepository.GetHotelRooms();

    }

    private async Task DeleteHotelRoom(MouseEventArgs e, int id)
    {
        var deletedRoom = await HotelRoomRepository.DeleteHotelRoom(id);
        HotelRooms = await HotelRoomRepository.GetHotelRooms();
    }

    //private void GoToEditPage(MouseEventArgs e, int id)
    //{
    //    NavigationManager.NavigateTo($"hotel-room/edit/{id}");
    //}

}
